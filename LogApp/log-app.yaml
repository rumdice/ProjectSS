apiVersion: apps/v1
kind: Deployment
metadata:
  name: log-app-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: log-app
  template:
    metadata:
      labels:
        app: log-app
    spec:
      initContainers:
      - name: docker-login 
        image: docker
        command: ["docker", "login", "-u", "rumdice", "-p", "duddns@554"] # docker 에 로그인 하기 위한 커맨드
      containers:
      - name: log-app-container
        image: rumdice/log-app:latest # docker hub 아이디/repository경로
        ports:
        - containerPort: 8080 # 컨테이너의 포트
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: Production
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-secrets
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-secrets
              key: AWS_SECRET_ACCESS_KEY
        - name: AWS_DEFAULT_REGION
          valueFrom:
            secretKeyRef:
              name: aws-secrets
              key: AWS_DEFAULT_REGION
      imagePullSecrets:
      - name: rumdice-dockerhub-secret # docker hub private에 접근 하기 위한 kubectl secret 이름
        

---

apiVersion: v1
kind: Service
metadata:
  name: log-app-service
spec:
  selector:
    app: log-app
  ports:
  - protocol: TCP
    port: 7200 # 로컬 포트
    targetPort: 8080 # 포트포워딩할 타겟 컨테이너의 포트
  type: LoadBalancer

