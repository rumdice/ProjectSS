@page "/login"
@using Radzen.Blazor
@using LogApp.Service
@using System.Threading.Tasks
@inject AccountService AccountService

<RadzenCard class="rz-my-12 rz-mx-auto rz-p-4 rz-p-md-12" style="max-width: 600px;">
    <RadzenTemplateForm Data=@("LoginWithDefaultValues")>
        <RadzenLogin AllowRegister="true" AllowResetPassword="true" Username=@username Password=@password
                    AllowRememberMe="true" RememberMe="@rememberMe"
                    Login=@(args => OnLogin(args, "Login with default values"))
                    ResetPassword=@(args => OnResetPassword(args, "Login with default values"))
                    Register=@(args => OnRegister("Login with default values")) />
    </RadzenTemplateForm>
</RadzenCard>


@code {

    // 기본 계정 정보 셋팅
    string username = "admin";
    string password = "admin";
    bool rememberMe = true;

    [Inject]
    private NavigationManager Navigation { get; set; }

    private async Task OnLogin(LoginArgs args, string name)
    {
        Console.WriteLine($"{name} -> Username: {args.Username}, password: {args.Password}, remember me: {args.RememberMe}");

        var result = await AccountService.CheckAccountPassword(args.Username, args.Password);
        if (result)
        {
            AccountService.SetState<bool>("IsAuthenticated", true);
            Navigation.NavigateTo("/gallary");
        }
        else
        {
            AccountService.SetState<bool>("IsAuthenticated", false);
            Navigation.NavigateTo("/login");
        }
    }

    void OnRegister(string name)
    {
        Console.WriteLine($"{name} -> Register");
    }

    void OnResetPassword(string value, string name)
    {
        Console.WriteLine($"{name} -> ResetPassword for user: {value}");
    }
}
