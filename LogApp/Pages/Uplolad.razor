@page "/upload"
@using Radzen
@using Radzen.Blazor
@using LogApp.Service
@using System.Threading.Tasks
@inject ImageService ImageService
@inject AccountService AccountService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>Photo Gallery</PageTitle>

<h1>Upload Photo</h1>


<RadzenRow Gap="2rem" RowGap="2rem" class="rz-m-0 rz-m-md-12">
    <RadzenColumn Size="12" SizeMD="4">
        <RadzenCard Variant="Variant.Outlined">
            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Single File Upload</RadzenText>

            <!-- RadzenUpload 컴포넌트 -->
            <RadzenUpload 
                Url="upload/single" 
                Progress="@(args => OnProgress(args))" 
                Style="width: 100%;" 
                InputAttributes="@(new Dictionary<string, object>() { { "aria-label", "Select file" } })"
                Auto="true"
                Accept="image/*"
                @bind-Value="files" 
                UploadComplete="OnUploadCompleteAsync">
            </RadzenUpload>
        </RadzenCard>
        
    </RadzenColumn>
</RadzenRow>

<!-- 업로드 진행 상태 -->
<RadzenProgressBar Value="@progress" ShowValue="true" Max="100" Style="width: 100%;" />

@code {
    private int progress = 0;
    private List<IBrowserFile> files = new List<IBrowserFile>();

    protected override async Task OnInitializedAsync()
    {
        // 인증 상태 확인
        bool isAuthenticated = AccountService.GetState<bool>("IsAuthenticated");
        if (!isAuthenticated)
        {
            Navigation.NavigateTo("/login");
        }
    }

    // 업로드 진행 상태
    private void OnProgress(UploadProgressArgs args)
    {
        progress = args.Progress;
    } 

    // 업로드 완료 후 호출되는 메서드
    private async Task OnUploadCompleteAsync(UploadCompleteEventArgs args)
    {
        // TODO: 호출이 안되는 이유?
        //await ImageService.UploadFileAsync();
        // 업로드가 완료되면, 업로드된 파일의 URL을 가져오고 싶다면
        @* if (args.Files != null && args.Files.Count > 0)
        {
            var uploadedFile = args.Files[0]; // 업로드된 첫 번째 파일
            var fileUrl = await ImageService.UploadFileAsync(uploadedFile);
            Console.WriteLine($"File uploaded successfully. URL: {fileUrl}");
        } *@
    }
}